\BOOKMARK [0][]{chapter.1}{1 Introduction}{}% 1
\BOOKMARK [1][-]{section.1.1}{1.1 Graph Data: Use Cases}{chapter.1}% 2
\BOOKMARK [-1][]{part.1}{I Related Works}{}% 3
\BOOKMARK [0][]{chapter.2}{2 Data integration: a data representation-independent approach}{part.1}% 4
\BOOKMARK [1][-]{section.2.1}{2.1 Preliminaries: data representation dependent approach}{chapter.2}% 5
\BOOKMARK [2][-]{subsection.2.1.1}{2.1.1 Structured Data integration: Integrating entities represented with different schemas}{section.2.1}% 6
\BOOKMARK [2][-]{subsection.2.1.2}{2.1.2 Semistructured Data Integration: Integrating multiple relations into a common representation}{section.2.1}% 7
\BOOKMARK [2][-]{subsection.2.1.3}{2.1.3 Structured and Semistructured data integration: schema alignment as a data cleaning step}{section.2.1}% 8
\BOOKMARK [2][-]{subsection.2.1.4}{2.1.4 Integrating unstructured data via semistructured representation}{section.2.1}% 9
\BOOKMARK [2][-]{subsection.2.1.5}{2.1.5 Aligning \(Nested\) Graphs}{section.2.1}% 10
\BOOKMARK [1][-]{section.2.2}{2.2 In-Database Integration}{chapter.2}% 11
\BOOKMARK [2][-]{subsection.2.2.1}{2.2.1 Preliminaries: towards a uniform data representation}{section.2.2}% 12
\BOOKMARK [2][-]{subsection.2.2.2}{2.2.2 Aggregations}{section.2.2}% 13
\BOOKMARK [1][-]{section.2.3}{2.3 Multi-database integration}{chapter.2}% 14
\BOOKMARK [2][-]{subsection.2.3.1}{2.3.1 Preliminaries: Description Logic and Ontologies}{section.2.3}% 15
\BOOKMARK [2][-]{subsection.2.3.2}{2.3.2 Ontology Alignments and Data Integration}{section.2.3}% 16
\BOOKMARK [2][-]{subsection.2.3.3}{2.3.3 Query Rewriting}{section.2.3}% 17
\BOOKMARK [1][-]{section.2.4}{2.4 Conclusions}{chapter.2}% 18
\BOOKMARK [0][]{chapter.3}{3 Analysing the properties of Data Models and Query Languages}{part.1}% 19
\BOOKMARK [1][-]{section.3.1}{3.1 Structured data: the Relational Model}{chapter.3}% 20
\BOOKMARK [2][-]{subsection.3.1.1}{3.1.1 Query Languages}{section.3.1}% 21
\BOOKMARK [2][-]{subsection.3.1.2}{3.1.2 Representation Problems}{section.3.1}% 22
\BOOKMARK [2][-]{subsection.3.1.3}{3.1.3 Representing graphs}{section.3.1}% 23
\BOOKMARK [1][-]{section.3.2}{3.2 Nested Relational Model, Semistructured data and Streams}{chapter.3}% 24
\BOOKMARK [2][-]{subsection.3.2.1}{3.2.1 Query languages}{section.3.2}% 25
\BOOKMARK [2][-]{subsection.3.2.2}{3.2.2 Representation problems}{section.3.2}% 26
\BOOKMARK [2][-]{subsection.3.2.3}{3.2.3 Representing graphs}{section.3.2}% 27
\BOOKMARK [1][-]{section.3.3}{3.3 Unstructured Data: Full Text Documents}{chapter.3}% 28
\BOOKMARK [2][-]{subsection.3.3.1}{3.3.1 Query Languages}{section.3.3}% 29
\BOOKMARK [1][-]{section.3.4}{3.4 Graph \(Data\) Models}{chapter.3}% 30
\BOOKMARK [1][-]{section.3.5}{3.5 Classifying Graph Query Languages}{chapter.3}% 31
\BOOKMARK [2][-]{subsection.3.5.1}{3.5.1 Graph Traversal and Pattern Matching Languages}{section.3.5}% 32
\BOOKMARK [2][-]{subsection.3.5.2}{3.5.2 Graph Grammars}{section.3.5}% 33
\BOOKMARK [2][-]{subsection.3.5.3}{3.5.3 Graph Algebras}{section.3.5}% 34
\BOOKMARK [2][-]{subsection.3.5.4}{3.5.4 \(Proper\) Graph Query Languages}{section.3.5}% 35
\BOOKMARK [1][-]{section.3.6}{3.6 Conclusions}{chapter.3}% 36
\BOOKMARK [-1][]{part.2}{II On Combining Graphs}{}% 37
\BOOKMARK [0][]{chapter.4}{4 On Joining Property Graphs}{part.2}% 38
\BOOKMARK [1][-]{section.4.1}{4.1 Graph Query Languages limitations' on Graph Joins}{chapter.4}% 39
\BOOKMARK [1][-]{section.4.2}{4.2 Graph Data Model}{chapter.4}% 40
\BOOKMARK [1][-]{section.4.3}{4.3 Graph -Joins}{chapter.4}% 41
\BOOKMARK [2][-]{subsection.4.3.1}{4.3.1 Graph Join properties}{section.4.3}% 42
\BOOKMARK [1][-]{section.4.4}{4.4 Graph Conjunctive Equi-Joins}{chapter.4}% 43
\BOOKMARK [2][-]{subsection.4.4.1}{4.4.1 Algorithm and Data Structure}{section.4.4}% 44
\BOOKMARK [2][-]{subsection.4.4.2}{4.4.2 Experimental Evaluation}{section.4.4}% 45
\BOOKMARK [1][-]{section.4.5}{4.5 Graph Less-Equal Join}{chapter.4}% 46
\BOOKMARK [1][-]{section.4.6}{4.6 Left, right and full graph joins.}{chapter.4}% 47
\BOOKMARK [1][-]{section.4.7}{4.7 Conclusions}{chapter.4}% 48
\BOOKMARK [0][]{chapter.5}{5 General Semistructured Model and Nested Graphs}{part.2}% 49
\BOOKMARK [1][-]{section.5.1}{5.1 General Semistructured \(Data\) Model}{chapter.5}% 50
\BOOKMARK [2][-]{subsection.5.1.1}{5.1.1 script, a MetaModel for GSM}{section.5.1}% 51
\BOOKMARK [2][-]{subsection.5.1.2}{5.1.2 Characterizing object identifiers}{section.5.1}% 52
\BOOKMARK [1][-]{section.5.2}{5.2 Nested Graph}{chapter.5}% 53
\BOOKMARK [1][-]{section.5.3}{5.3 Data model translation functions}{chapter.5}% 54
\BOOKMARK [1][-]{section.5.4}{5.4 Use Cases}{chapter.5}% 55
\BOOKMARK [2][-]{subsection.5.4.1}{5.4.1 Representing part-of aggregations}{section.5.4}% 56
\BOOKMARK [2][-]{subsection.5.4.2}{5.4.2 Graph ETL and \(\205\)\(Di\),H\(\(Di\)\): the Transformation phase}{section.5.4}% 57
\BOOKMARK [1][-]{section.5.5}{5.5 Conclusions}{chapter.5}% 58
\BOOKMARK [0][]{chapter.6}{6 GSQL: a Generalized Semistructured Query Language}{part.2}% 59
\BOOKMARK [1][-]{section.6.1}{6.1 General Semistructured Query Language \(GSQL\)}{chapter.6}% 60
\BOOKMARK [1][-]{section.6.2}{6.2 Derived GSQL operators over GSM}{chapter.6}% 61
\BOOKMARK [2][-]{subsection.6.2.1}{6.2.1 \(Attribute labelled\) Set operations}{section.6.2}% 62
\BOOKMARK [2][-]{subsection.6.2.2}{6.2.2 Relational and semistructured operations}{section.6.2}% 63
\BOOKMARK [1][-]{section.6.3}{6.3 GSQL Use cases}{chapter.6}% 64
\BOOKMARK [2][-]{subsection.6.3.1}{6.3.1 paNGRAm: Nested Graph Relational Algebra}{section.6.3}% 65
\BOOKMARK [2][-]{subsection.6.3.2}{6.3.2 Implementing traversal query languages' semantics \(\)}{section.6.3}% 66
\BOOKMARK [2][-]{subsection.6.3.3}{6.3.3 Representing is-a aggregations}{section.6.3}% 67
\BOOKMARK [2][-]{subsection.6.3.4}{6.3.4 Generalized Graph Grammars G for Nested Graphs. H,TG\(H\)\(\)}{section.6.3}% 68
\BOOKMARK [1][-]{section.6.4}{6.4 Conclusons}{chapter.6}% 69
\BOOKMARK [0][]{chapter.7}{7 On Nesting Graphs}{part.2}% 70
\BOOKMARK [1][-]{section.7.1}{7.1 Graph Query Languages limitations\220 on Graph Nesting}{chapter.7}% 71
\BOOKMARK [2][-]{subsection.7.1.1}{7.1.1 Graph Joins' limitations in providing the \040operator}{section.7.1}% 72
\BOOKMARK [2][-]{subsection.7.1.2}{7.1.2 Implementing Graph Nesting over \(two\) graph collections}{section.7.1}% 73
\BOOKMARK [2][-]{subsection.7.1.3}{7.1.3 Query Languages' and data models' limitations}{section.7.1}% 74
\BOOKMARK [1][-]{section.7.2}{7.2 Class of optimizable graph nesting queries}{chapter.7}% 75
\BOOKMARK [1][-]{section.7.3}{7.3 Nested Graphs}{chapter.7}% 76
\BOOKMARK [1][-]{section.7.4}{7.4 Graph Nesting}{chapter.7}% 77
\BOOKMARK [2][-]{subsection.7.4.1}{7.4.1 Two HOp Separated Patterns Algorithm}{section.7.4}% 78
\BOOKMARK [1][-]{section.7.5}{7.5 Experimental Evaluation}{chapter.7}% 79
\BOOKMARK [1][-]{section.7.6}{7.6 Conclusions}{chapter.7}% 80
\BOOKMARK [-1][]{part.3}{III Conclusions}{}% 81
\BOOKMARK [0][]{chapter.8}{8 Conclusions}{part.3}% 82
\BOOKMARK [0][]{appendix.A}{A Resolving Alignments and Morphisms: OCaml Source Code}{part.3}% 83
\BOOKMARK [0][]{appendix.B}{B Dovetailing lemmas}{part.3}% 84
\BOOKMARK [0][]{appendix.C}{C Expressing containment functions in script}{part.3}% 85
